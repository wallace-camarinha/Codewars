{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Challenge\r\nA format for expressing an ordered list of integers is to use a comma separated list of either individual integers or a range of integers denoted by the starting integer separated from the end integer in the range by a dash, '-'. The range includes all integers in the interval including both endpoints. It is not considered a range unless it spans at least 3 numbers. For example \"12,13,15-17\"\r\n\r\nComplete the solution so that it takes a list of integers in increasing order and returns a correctly formatted string in the range format. \r\n\r\n## Range Extraction\r\n\r\n- Validate (n - (n-1) <= 1 AND >= 0)\r\n- Store first number of sequence in a variable\r\n- Add last number of the sequence separated by a dash (-)\r\n- Validate if sequence >= 3, else add to the result array\r\n- Result must be a string in the range format\r\n"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function solution(list)\r\n{\r\n  let result = \"\";\r\n  let isRange = false;\r\n  \r\n\r\n  for (let i = 0; i < list.length; ++i) {\r\n    const j = list[i];\r\n\r\n    if (list[i + 1] !== j + 1) {\r\n      if (isRange) result += (list[i] === list[i - 2] + 2) ? \"-\" : \",\";\r\n      \r\n      result += j + \",\";\r\n      isRange = false;\r\n    }\r\n\r\n    else if (!isRange) {\r\n      result += j;\r\n      isRange = true;\r\n    }\r\n  }\r\n\r\n  return result.slice(0, -1);\r\n}\r\n\r\nsolution([-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20])"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "false",
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[32m'-6,-3-1,3-5,7-11,14,15,17-20'\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}